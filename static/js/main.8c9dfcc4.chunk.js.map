{"version":3,"sources":["../../src/Components/StatBox.tsx","../../src/Components/StatRow.tsx","../../src/Components/Skill.tsx","../../src/Components/StatBox2.tsx","../../src/Components/DeathSave.tsx","../../src/Components/AttackTable.tsx","../../src/Components/Currency.tsx","../../src/DnDCharacterStatsSheet.tsx","../../src/Components/Image.tsx","../../src/DnDCharacterProfileSheet.tsx","../../src/Components/SpellTable.tsx","../../src/DnDCharacterSpellSheet.tsx","App.tsx","index.tsx"],"names":["StatBox","props","classes","modifier","isNaN","Number","modifierNum","Math","className","React","type","value","onChange","e","StatRow","Skill","onClick","StatBox2","DeathSave","style","display","AttackTable","getValue","width","key","index","v","updateValue","Currency","initialState","character","DnDCharacterStatsSheet","updateCharacter","oldCharacter","this","newCharacter","Object","getCharacter","state","render","textAlign","textTransform","fontSize","label","name","str","dex","con","wis","cha","inspiration","proficiencyBonus","strSave","checked","strSaveChecked","dexSave","dexSaveChecked","conSave","conSaveChecked","intSave","intSaveChecked","wisSave","wisSaveChecked","chaSave","chaSaveChecked","marginTop","hint","skillAcrobatics","skillAcrobaticsChecked","skillAthletics","skillAthleticsChecked","skillArcana","skillArcanaChecked","skillDeception","skillDeceptionChecked","skillHistory","skillHistoryChecked","skillPerformance","skillPerformanceChecked","skillIntimidation","skillIntimidationChecked","skillInvestigation","skillInvestigationChecked","skillSlightOfHand","skillSlightOfHandChecked","skillMedicine","skillMedicineChecked","skillNature","skillNatureChecked","skillPerception","skillPerceptionChecked","skillInsight","skillInsightChecked","skillPersuasion","skillPersuasionChecked","skillReligion","skillReligionChecked","skillStealth","skillStealthChecked","skillSurvival","skillSurvivalChecked","skillAnimalHandling","skillAnimalHandlingChecked","passivePerception","rows","labelTop","ac","init","speed","borderRadius","marginBottom","paddingBottom","deathsaveSuccesses","deathsaveFailures","attacks","cp","sp","ep","gp","pp","paddingTop","Component","Image","elementId","backgroundImage","document","id","accept","console","event","window","fr","importImage","DnDCharacterProfileSheet","appearance","factionImg","totalNonConsumableMagicItems","SpellTable","slotCount","slots","i1","renderSlotsRemaining","position","left","DnDCharacterSpellsSheet","preparedSpellsTotal","spellSaveDC","spellAttackBonus","level","cantrips","showLabels","slotsName","slotsUsedName","lvl1Spells","slotsValue","lvl1SpellSlotsTotal","slotsUsedValue","lvl1SpellSlotsUsed","lvl2Spells","lvl2SpellSlotsTotal","lvl2SpellSlotsUsed","lvl3Spells","lvl3SpellSlotsTotal","lvl3SpellSlotsUsed","lvl4Spells","lvl4SpellSlotsTotal","lvl4SpellSlotsUsed","lvl5Spells","lvl5SpellSlotsTotal","lvl5SpellSlotsUsed","lvl6Spells","lvl6SpellSlotsTotal","lvl6SpellSlotsUsed","lvl7Spells","lvl7SpellSlotsTotal","lvl7SpellSlotsUsed","lvl8Spells","lvl8SpellSlotsTotal","lvl8SpellSlotsUsed","lvl9Spells","lvl9SpellSlotsTotal","lvl9SpellSlotsUsed","ScrollToTop","pathname","useLocation","useEffect","scrollTo","withRouter","useState","lsData","localStorage","getItem","JSON","parse","loadDefaultCharacter","setCharacter","navTop","setNavTop","pageYOffset","prevScrollpos","setPrevScrollpos","setLoading","search","characterToLoad","qs","ignoreQueryPrefix","axios","get","then","response","Array","isArray","data","Error","log","catch","error","statsSheet","onCharacterChanged","profileSheet","spellSheet","setItem","stringify","importCharacter","target","files","length","FileReader","onload","result","json","alert","loadCharacter","readAsText","onscroll","currentScrollPos","onScroll","backgroundColor","top","data-toggle","data-target","aria-controls","aria-expanded","aria-label","location","to","a","createElement","file","Blob","href","URL","createObjectURL","download","replace","toLowerCase","click","exportCharacter","getElementById","print","confirm","exact","path","defaultRedirect","innerWidth","getDefaultRedirect","ReactDOM","basename"],"mappings":"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","file":"static/js/main.8c9dfcc4.chunk.js","sourcesContent":["import React from 'react'\n\nfunction StatBox(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  label: React.ReactNode\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-statbox'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  let modifier: string = ''\n  if (props.value && !isNaN(Number(props.value))) {\n    const modifierNum = Math.floor((Number(props.value) - 10) / 2)\n    if (modifierNum > 0) {\n      modifier = '+' + modifierNum\n    } else {\n      modifier = modifierNum.toString()\n    }\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <label>{props.label}</label>\n        <div className='d-and-d-statbox-modifier'>{modifier}</div>\n      </div>\n      <div className='d-and-d-statbox-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\n\nfunction StatRow(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  label: React.ReactNode\n}) {\n  let classes = 'd-and-d-statrow'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-statrow-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n      <div className='d-and-d-statrow-label'>\n        <label>{props.label}</label>\n      </div>\n    </div>\n  )\n}\n\nexport default StatRow\n","import React from 'react'\n\nfunction Skill(props: {\n  classes?: string\n  checked?: boolean\n  onChange: (arg0: string, arg1: string | boolean) => void\n  name: string\n  value: string | number | readonly string[] | undefined\n  label?: React.ReactNode\n  hint?: React.ReactNode\n}) {\n  let classes = 'd-and-d-skill'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div\n        className={\n          props.checked ? 'd-and-d-skill-circle active' : 'd-and-d-skill-circle'\n        }\n        onClick={() => props.onChange(props.name + 'Checked', !props.checked)}\n      />\n      <input\n        type='text'\n        value={props.value ? props.value : ''}\n        onChange={(e) => props.onChange(props.name, e.target.value)}\n      />\n      <label>{props.label}</label>\n      {props.hint ? (\n        <span className='d-and-d-skill-hint'>{props.hint}</span>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Skill\n","import React from 'react'\n\nfunction StatBox2(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  labelTop?: {} | null | undefined\n  label?: React.ReactNode\n}) {\n  let classes = 'd-and-d-statbox type2'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <div className='d-and-d-statbox-modifier'>\n          <input\n            type='text'\n            value={props.value ? props.value : ''}\n            onChange={(e) => props.onChange(props.name, e.target.value)}\n          />\n        </div>\n        {props.labelTop != null ? (\n          <div>\n            <label className='label-top'>{props.labelTop}</label>\n          </div>\n        ) : null}\n        {props.label != null ? (\n          <div>\n            <label>{props.label}</label>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox2\n","import React from 'react'\n\nfunction DeathSave(props: {\n  classes?: string\n  label: React.ReactNode\n  value?: number\n  onChange: (arg0: any, arg1: number | null) => void\n  name: any\n}) {\n  let classes = 'd-and-d-deathsave'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <label>{props.label}</label>\n      <div style={{ display: 'inline-block' }}>\n        <div\n          className={\n            props.value && props.value >= 1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 1 ? null : 1)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 2\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 2 ? null : 2)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 3\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 3 ? null : 3)\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DeathSave\n","import React from 'react'\n\nfunction AttackTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'd-and-d-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>Nombre</th>\n          <th style={{ width: '70px' }}>Bonif.</th>\n          <th>Daño/Tipo</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              bonus: string | number | readonly string[] | undefined\n              damage: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'d-and-d-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.bonus ? v.bonus : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'bonus', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.damage ? v.damage : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'damage', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default AttackTable\n","import React from 'react'\n\nfunction Currency(props: {\n  classes?: string\n  label: React.ReactNode\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-currency'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-currency-label'>\n        <label>{props.label}</label>\n      </div>\n      <div className='d-and-d-currency-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Currency\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport Statbox from './Components/StatBox'\nimport StatRow from './Components/StatRow'\nimport Skill from './Components/Skill'\nimport StatBox2 from './Components/StatBox2'\nimport DeathSave from './Components/DeathSave'\nimport AttackTable from './Components/AttackTable'\nimport Currency from './Components/Currency'\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterStatsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterStatsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterStatsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterStatsSheet extends React.Component<\n  IDnDCharacterStatsSheetProps,\n  IDnDCharacterStatsSheetState\n> {\n  constructor(props: IDnDCharacterStatsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Nombre del Personaje\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.classLevel ? character.classLevel : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('classLevel', e.target.value)\n                      }\n                    />\n                    <label>Clase y Nivel</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.background ? character.background : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('background', e.target.value)\n                      }\n                    />\n                    <label>Trasfondo</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.playerName ? character.playerName : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('playerName', e.target.value)\n                      }\n                    />\n                    <label>Nombre del Jugador</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.faction ? character.faction : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('faction', e.target.value)\n                      }\n                    />\n                    <label>Facción</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.race ? character.race : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('race', e.target.value)\n                      }\n                    />\n                    <label>Raza</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.alignment ? character.alignment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('alignment', e.target.value)\n                      }\n                    />\n                    <label>Alineamiento</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.xp ? character.xp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('xp', e.target.value)\n                      }\n                    />\n                    <label>Puntos de Experiencia</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.dciNo ? character.dciNo : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('dciNo', e.target.value)\n                      }\n                    />\n                    <label>Número DCI</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='row'>\n                <div className='col-4 pr-1'>\n                  <div className='d-and-d-box gray'>\n                    <Statbox\n                      label='Fuerza'\n                      name='str'\n                      value={character.str}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Destreza'\n                      name='dex'\n                      value={character.dex}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Constitución'\n                      name='con'\n                      value={character.con}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Inteligencia'\n                      name='int'\n                      value={character.int}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Sabiduría'\n                      name='wis'\n                      value={character.wis}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Carisma'\n                      name='cha'\n                      value={character.cha}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className='col-8'>\n                  <StatRow\n                    label='Inspiración'\n                    name='inspiration'\n                    value={character.inspiration}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <StatRow\n                    classes='rounded'\n                    label='Bonificador por&nbsp;Competencia'\n                    name='proficiencyBonus'\n                    value={character.proficiencyBonus}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Fuerza'\n                        name='strSave'\n                        value={character.strSave}\n                        checked={character.strSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Destreza'\n                        name='dexSave'\n                        value={character.dexSave}\n                        checked={character.dexSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Constitución'\n                        name='conSave'\n                        value={character.conSave}\n                        checked={character.conSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Inteligencia'\n                        name='intSave'\n                        value={character.intSave}\n                        checked={character.intSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Sabiduría'\n                        name='wisSave'\n                        value={character.wisSave}\n                        checked={character.wisSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Carisma'\n                        name='chaSave'\n                        value={character.chaSave}\n                        checked={character.chaSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Tiradas de Salvación\n                    </label>\n                  </div>\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Acrobacias'\n                        hint='(Des)'\n                        name='skillAcrobatics'\n                        value={character.skillAcrobatics}\n                        checked={character.skillAcrobaticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Atletismo'\n                        hint='(Fue)'\n                        name='skillAthletics'\n                        value={character.skillAthletics}\n                        checked={character.skillAthleticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Conocimiento Arcano'\n                        hint='(Int)'\n                        name='skillArcana'\n                        value={character.skillArcana}\n                        checked={character.skillArcanaChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Engaño'\n                        hint='(Car)'\n                        name='skillDeception'\n                        value={character.skillDeception}\n                        checked={character.skillDeceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Historia'\n                        hint='(Int)'\n                        name='skillHistory'\n                        value={character.skillHistory}\n                        checked={character.skillHistoryChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Interpretación'\n                        hint='(Car)'\n                        name='skillPerformance'\n                        value={character.skillPerformance}\n                        checked={character.skillPerformanceChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intimidación'\n                        hint='(Car)'\n                        name='skillIntimidation'\n                        value={character.skillIntimidation}\n                        checked={character.skillIntimidationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Investigación'\n                        hint='(Int)'\n                        name='skillInvestigation'\n                        value={character.skillInvestigation}\n                        checked={character.skillInvestigationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Juego de Manos'\n                        hint='(Des)'\n                        name='skillSlightOfHand'\n                        value={character.skillSlightOfHand}\n                        checked={character.skillSlightOfHandChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Medicina'\n                        hint='(Sab)'\n                        name='skillMedicine'\n                        value={character.skillMedicine}\n                        checked={character.skillMedicineChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Naturaleza'\n                        hint='(Int)'\n                        name='skillNature'\n                        value={character.skillNature}\n                        checked={character.skillNatureChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Percepción'\n                        hint='(Sab)'\n                        name='skillPerception'\n                        value={character.skillPerception}\n                        checked={character.skillPerceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Perspicacia'\n                        hint='(Sab)'\n                        name='skillInsight'\n                        value={character.skillInsight}\n                        checked={character.skillInsightChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Persuasión'\n                        hint='(Car)'\n                        name='skillPersuasion'\n                        value={character.skillPersuasion}\n                        checked={character.skillPersuasionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Religión'\n                        hint='(Int)'\n                        name='skillReligion'\n                        value={character.skillReligion}\n                        checked={character.skillReligionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Sigilio'\n                        hint='(Des)'\n                        name='skillStealth'\n                        value={character.skillStealth}\n                        checked={character.skillStealthChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Supervivencia'\n                        hint='(Sab)'\n                        name='skillSurvival'\n                        value={character.skillSurvival}\n                        checked={character.skillSurvivalChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Trato con Animales'\n                        hint='(Sab)'\n                        name='skillAnimalHandling'\n                        value={character.skillAnimalHandling}\n                        checked={character.skillAnimalHandlingChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Habilidades\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-2'>\n                <StatRow\n                  classes='rounded rounded-sides'\n                  label='Sabiduría (Percepción) Pasiva'\n                  name='passivePerception'\n                  value={character.passivePerception}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n              <div className='d-and-d-box mt-4'>\n                <textarea\n                  value={\n                    character.otherProficiencies\n                      ? character.otherProficiencies\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('otherProficiencies', e.target.value)\n                  }\n                  rows={12}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Otras Competencias e Idiomas\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box gray'>\n                <div className='row'>\n                  <div className='col-4 pr-2'>\n                    <StatBox2\n                      classes='shield'\n                      labelTop='Clase de'\n                      label='Armadura'\n                      name='ac'\n                      value={character.ac}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pr-2 pl-2'>\n                    <StatBox2\n                      label='Iniciativa'\n                      name='init'\n                      value={character.init}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pl-2'>\n                    <StatBox2\n                      label='Velocidad'\n                      name='speed'\n                      value={character.speed}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <div className='d-and-d-gray-text'>\n                    <label style={{ width: '120px' }}>Puntos de Golpe Máximos</label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 120px)' }}\n                      className='d-and-d-linput'\n                      value={character.maxHp ? character.maxHp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('maxHp', e.target.value)\n                      }\n                    />\n                  </div>\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.hp ? character.hp : ''}\n                    onChange={(e) => this.updateCharacter('hp', e.target.value)}\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Puntos de Golpe Actuales\n                  </label>\n                </div>\n                <div\n                  className='d-and-d-box white mb-2'\n                  style={{ borderRadius: '0 0 8px 8px', paddingBottom: '5px' }}\n                >\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.tempHp ? character.tempHp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('tempHp', e.target.value)\n                    }\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Puntos de Golpe Temporales\n                  </label>\n                </div>\n\n                <div className='row mt-1'>\n                  <div className='col-6 pr-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <div className='d-and-d-gray-text'>\n                        <label style={{ width: '25px' }}>Total</label>\n                        <input\n                          type='text'\n                          style={{ width: 'calc(100% - 25px)' }}\n                          className='d-and-d-linput'\n                          value={\n                            character.hitDiceMax ? character.hitDiceMax : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter('hitDiceMax', e.target.value)\n                          }\n                        />\n                      </div>\n                      <input\n                        type='text'\n                        className='d-and-d-cinput'\n                        value={character.hitDice ? character.hitDice : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice', e.target.value)\n                        }\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '5px' }}\n                      >\n                        Dados de Golpe\n                      </label>\n                    </div>\n                  </div>\n                  <div className='col-6 pl-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <DeathSave\n                        classes='d-and-d-save-success'\n                        label='Éxitos'\n                        name='deathsaveSuccesses'\n                        value={character.deathsaveSuccesses}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <DeathSave\n                        classes='d-and-d-save-failure'\n                        label='Fallos'\n                        name='deathsaveFailures'\n                        value={character.deathsaveFailures}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '6px' }}\n                      >\n                        Salvaciones Contra Muerte\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <AttackTable\n                  rows={3}\n                  name='attacks'\n                  value={character.attacks}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <textarea\n                  value={character.attacksText ? character.attacksText : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('attacksText', e.target.value)\n                  }\n                  rows={6}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Ataques y Lanzamiento de Conjuros\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-4'>\n                <div className='row'>\n                  <div className='' style={{ width: '100px' }}>\n                    <Currency\n                      label='C'\n                      name='cp'\n                      value={character.cp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='P'\n                      name='sp'\n                      value={character.sp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='E'\n                      name='ep'\n                      value={character.ep}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='O'\n                      name='gp'\n                      value={character.gp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='PT'\n                      name='pp'\n                      value={character.pp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col'>\n                    <textarea\n                      className='d-and-d-equipment-indent'\n                      value={character.equipment ? character.equipment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                  <div className='col-md-12'>\n                    <textarea\n                      value={character.equipment2 ? character.equipment2 : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment2', e.target.value)\n                      }\n                      rows={4}\n                    />\n                  </div>\n                </div>\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Equipo\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div\n                className='d-and-d-box gray'\n                style={{ marginBottom: '17px' }}\n              >\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={\n                      character.personalityTraits\n                        ? character.personalityTraits\n                        : ''\n                    }\n                    onChange={(e) =>\n                      this.updateCharacter('personalityTraits', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Rasgos de Personalidad</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.ideals ? character.ideals : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('ideals', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Ideales</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.bonds ? character.bonds : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('bonds', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Vínculos</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 8px 8px',\n                    marginBottom: '0px',\n                    paddingTop: '1px',\n                    paddingBottom: '4px'\n                  }}\n                >\n                  <textarea\n                    value={character.flaws ? character.flaws : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('flaws', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Defectos</label>\n                </div>\n              </div>\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.featuresTraits ? character.featuresTraits : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('featuresTraits', e.target.value)\n                  }\n                  rows={27}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Rasgos y Atributos\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterStatsSheet\n","import React from 'react'\n\nfunction Image(props: {\n  classes?: string\n  value: any\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  function importImage(event: any) {\n    console.log(event)\n    if (event.target.files.length > 0) {\n      console.log(event.target.files)\n      if (event.target.files[0].size > 2000000) {\n        window.alert(\n          'La imagen es demasiado grande. El tamaño máximo es 2MB. Favor de reducir el tamaño e intentar otra vez.'\n        )\n        return\n      }\n\n      var fr = new FileReader()\n\n      fr.onload = function (e) {\n        if (\n          e.target &&\n          e.target.result &&\n          typeof e.target.result === 'string'\n        ) {\n          props.onChange(props.name, e.target.result)\n        }\n      }\n\n      fr.readAsDataURL(event.target.files[0])\n    }\n  }\n\n  let classes = 'd-and-d-image'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  const elementId = 'd-and-d-image-' + props.name\n\n  return (\n    <div\n      className={classes}\n      style={{\n        backgroundImage: props.value ? 'url(' + props.value + ')' : ''\n      }}\n      onClick={() => document.getElementById(elementId)?.click()}\n    >\n      <input\n        style={{ display: 'none' }}\n        type='file'\n        id={elementId}\n        accept='image/*'\n        onChange={(e) => importImage(e)}\n      />\n    </div>\n  )\n}\n\nexport default Image\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatRow from './Components/StatRow'\nimport Image from './Components/Image'\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterProfileSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterProfileSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterProfileSheetState = {\n  character: {}\n}\n\nclass DnDCharacterProfileSheet extends React.Component<\n  IDnDCharacterProfileSheetProps,\n  IDnDCharacterProfileSheetState\n> {\n  constructor(props: IDnDCharacterProfileSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Nombre del Personaje\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.age ? character.age : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('age', e.target.value)\n                      }\n                    />\n                    <label>Edad</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.height ? character.height : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('height', e.target.value)\n                      }\n                    />\n                    <label>Altura</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.weight ? character.weight : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('weight', e.target.value)\n                      }\n                    />\n                    <label>Peso</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.eyes ? character.eyes : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('eyes', e.target.value)\n                      }\n                    />\n                    <label>Ojos</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.skin ? character.skin : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('skin', e.target.value)\n                      }\n                    />\n                    <label>Piel</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.hair ? character.hair : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('hair', e.target.value)\n                      }\n                    />\n                    <label>Cabello</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box square'>\n                <Image \n                  name='appearance'\n                  value={character.appearance}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Aspecto del Personaje\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.backstory ? character.backstory : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('backstory', e.target.value)\n                  }\n                  rows={26}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Historia del Personaje\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-8'>\n              <div className='d-and-d-box'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <div className='d-and-d-gray-text' style={{ paddingBottom: '1px' }}>\n                      <label style={{ width: '90px' }}>Rango en la Facción</label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 90px)' }}\n                        className='d-and-d-linput'\n                        value={character.factionRank ? character.factionRank : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('factionRank', e.target.value)\n                        }\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies ? character.allies : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies', e.target.value)\n                      }\n                      rows={16}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='d-and-d-box gray noborder' style={{marginBottom: '13px'}}>\n                      <div className='d-and-d-faction-input'>\n                        <label>Facción</label>\n                        <input\n                          type='text'\n                          value={character.faction ? character.faction : ''}\n                          onChange={(e) =>\n                            this.updateCharacter('faction', e.target.value)\n                          }\n                        />\n                      </div>\n                      <Image \n                        classes='faction'\n                        name='factionImg'\n                        value={character.factionImg}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies2 ? character.allies2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies2', e.target.value)\n                      }\n                      rows={3}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Aliados y Organizaciones\n                </label>\n              </div>\n              \n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures ? character.additionalFeatures : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures2 ? character.additionalFeatures2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures2', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                </div>\n\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Rasgos y Atributos Adicionales\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <StatRow\n                      classes='m-2 rounded rounded-sides wide-input'\n                      label='Artículos Mágicos No Consumibles'\n                      name='totalNonConsumableMagicItems'\n                      value={character.totalNonConsumableMagicItems}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '2px' }}\n                      value={\n                        character.treasure ? character.treasure : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure', e.target.value)\n                      }\n                      rows={8}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '4px' }}\n                      value={\n                        character.treasure2 ? character.treasure2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure2', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '4px' }}>\n                  Tesoro\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterProfileSheet\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\nfunction SpellTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  slotsName?: string\n  slotsUsedName?: string\n  level: number\n  value?: any\n  slotsValue?: string\n  slotsUsedValue?: number\n  classes?: string\n  rows: number\n  showLabels?: boolean\n  style?: React.CSSProperties | undefined\n}) {\n  function updateValue(index: React.Key, field: string, v: string | boolean) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  function renderSlotsRemaining() {\n    let slotCount = 6\n    if (props.slotsValue != null && props.slotsValue !== '' && Number(props.slotsValue) != null) {\n      slotCount = Number(props.slotsValue)\n    }\n\n    const slots = []\n    for (let i1 = 1; i1 <= slotCount; i1++) {\n      slots.push(\n        <div\n          key={'d-and-d-table-slot-' + props.name + i1}\n          className={\n            props.slotsUsedValue && props.slotsUsedValue >= i1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(\n              props.slotsUsedName,\n              props.slotsUsedValue === i1 ? null : i1\n            )\n          }\n        />\n      )\n    }\n\n    return slots\n  }\n\n  let classes = 'd-and-d-spelllist'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes} style={props.style}>\n      {props.showLabels ? (\n        <div className='d-and-d-spell-header-labels'>\n          <label style={{ width: '20px' }}>Nivel de Conjuro</label>\n          <label style={{ width: '80px' }}>Espacios Totales</label>\n          <label style={{ width: 'calc(100% - 100px)' }}>Espacios Gastados</label>\n        </div>\n      ) : null}\n      <div className='d-and-d-spell-header'>\n        <div className='d-and-d-spell-level'>{props.level}</div>\n        {props.level === 0 ? (\n          <div className='d-and-d-spell-slots'>\n            <label>Trucos</label>\n          </div>\n        ) : (\n          <div className='d-and-d-spell-slots'>\n            <div className='d-and-d-spell-slots-total'>\n              <input\n                type='text'\n                value={props.slotsValue ? props.slotsValue : ''}\n                onChange={(e) =>\n                  props.onChange(props.slotsName, e.target.value)\n                }\n              />\n            </div>\n            <div className='d-and-d-spell-slots-remaining'>\n              {renderSlotsRemaining()}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <table>\n        {props.showLabels ? (\n          <thead>\n            <tr>\n              <th style={{ width: '30px', position: 'absolute', left: '-7px' }}>\n                Preparado\n              </th>\n              <th>Nombre del Conjuro</th>\n            </tr>\n          </thead>\n        ) : null}\n        <tbody>\n          {getValue().map(\n            (\n              v: {\n                name: string | number | readonly string[] | undefined\n                prepared: boolean | undefined\n              },\n              index: string\n            ) => {\n              return (\n                <tr key={'d-and-d-table-row-' + props.name + index}>\n                  {props.level > 0 ? (\n                    <td className='d-and-d-spell-prepared'>\n                      <div\n                        className={\n                          v.prepared\n                            ? 'd-and-d-skill-circle active'\n                            : 'd-and-d-skill-circle'\n                        }\n                        onClick={() =>\n                          updateValue(index, 'prepared', !v.prepared)\n                        }\n                      />\n                    </td>\n                  ) : null}\n                  <td>\n                    <input\n                      type='text'\n                      value={v.name ? v.name : ''}\n                      onChange={(e) =>\n                        updateValue(index, 'name', e.target.value)\n                      }\n                    />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default SpellTable\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatBox2 from './Components/StatBox2'\n\nimport './dndstyles.css'\nimport SpellTable from './Components/SpellTable'\n\ninterface IDnDCharacterSpellsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterSpellsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterSpellsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterSpellsSheet extends React.Component<\n  IDnDCharacterSpellsSheetProps,\n  IDnDCharacterSpellsSheetState\n> {\n  constructor(props: IDnDCharacterSpellsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={\n                    character.spellcastingClass\n                      ? character.spellcastingClass\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('spellcastingClass', e.target.value)\n                  }\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Clase Lanzadora de Conjuros\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2' style={{ marginTop: '18px' }}>\n              <div className='d-and-d-attribute-collection gray pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='preparedSpellsTotal'\n                      value={character.preparedSpellsTotal}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Aptitud\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Mágica\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellSaveDC'\n                      value={character.spellSaveDC}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      CD Tirada de Salvación\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      de Conjuros\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellAttackBonus'\n                      value={character.spellAttackBonus}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Bonificador de\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Ataque de Conjuros\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={0}\n                  rows={9}\n                  name='cantrips'\n                  value={character.cantrips}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                  style={{ marginBottom: '23px' }}\n                />\n                <SpellTable\n                  level={1}\n                  rows={12}\n                  showLabels\n                  name='lvl1Spells'\n                  slotsName='lvl1SpellSlotsTotal'\n                  slotsUsedName='lvl1SpellSlotsUsed'\n                  value={character.lvl1Spells}\n                  slotsValue={character.lvl1SpellSlotsTotal}\n                  slotsUsedValue={character.lvl1SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={2}\n                  rows={13}\n                  name='lvl2Spells'\n                  slotsName='lvl2SpellSlotsTotal'\n                  slotsUsedName='lvl2SpellSlotsUsed'\n                  value={character.lvl2Spells}\n                  slotsValue={character.lvl2SpellSlotsTotal}\n                  slotsUsedValue={character.lvl2SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={3}\n                  rows={13}\n                  name='lvl3Spells'\n                  slotsName='lvl3SpellSlotsTotal'\n                  slotsUsedName='lvl3SpellSlotsUsed'\n                  value={character.lvl3Spells}\n                  slotsValue={character.lvl3SpellSlotsTotal}\n                  slotsUsedValue={character.lvl3SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={4}\n                  rows={13}\n                  name='lvl4Spells'\n                  slotsName='lvl4SpellSlotsTotal'\n                  slotsUsedName='lvl4SpellSlotsUsed'\n                  value={character.lvl4Spells}\n                  slotsValue={character.lvl4SpellSlotsTotal}\n                  slotsUsedValue={character.lvl4SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={5}\n                  rows={9}\n                  name='lvl5Spells'\n                  slotsName='lvl5SpellSlotsTotal'\n                  slotsUsedName='lvl5SpellSlotsUsed'\n                  value={character.lvl5Spells}\n                  slotsValue={character.lvl5SpellSlotsTotal}\n                  slotsUsedValue={character.lvl5SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={6}\n                  rows={9}\n                  name='lvl6Spells'\n                  slotsName='lvl6SpellSlotsTotal'\n                  slotsUsedName='lvl6SpellSlotsUsed'\n                  value={character.lvl6Spells}\n                  slotsValue={character.lvl6SpellSlotsTotal}\n                  slotsUsedValue={character.lvl6SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={7}\n                  rows={9}\n                  name='lvl7Spells'\n                  slotsName='lvl7SpellSlotsTotal'\n                  slotsUsedName='lvl7SpellSlotsUsed'\n                  value={character.lvl7Spells}\n                  slotsValue={character.lvl7SpellSlotsTotal}\n                  slotsUsedValue={character.lvl7SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={8}\n                  rows={7}\n                  name='lvl8Spells'\n                  slotsName='lvl8SpellSlotsTotal'\n                  slotsUsedName='lvl8SpellSlotsUsed'\n                  value={character.lvl8Spells}\n                  slotsValue={character.lvl8SpellSlotsTotal}\n                  slotsUsedValue={character.lvl8SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={9}\n                  rows={7}\n                  name='lvl9Spells'\n                  slotsName='lvl9SpellSlotsTotal'\n                  slotsUsedName='lvl9SpellSlotsUsed'\n                  value={character.lvl9Spells}\n                  slotsValue={character.lvl9SpellSlotsTotal}\n                  slotsUsedValue={character.lvl9SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterSpellsSheet\n","import React, { useState, useEffect } from 'react'\nimport {\n  Switch,\n  Route,\n  Link,\n  withRouter,\n  Redirect,\n  useLocation\n} from 'react-router-dom'\nimport axios from 'axios'\nimport qs from 'qs'\n\nimport { DnDCharacterStatsSheet, DnDCharacterProfileSheet, DnDCharacterSpellSheet, DnDCharacter } from 'dnd-character-sheets'\nimport 'dnd-character-sheets/dist/index.css'\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nconst App = (props: any) => {\n  const [character, setCharacter] = useState<DnDCharacter>(loadDefaultCharacter())\n  const [navTop, setNavTop] = useState<number>(0)\n  const [prevScrollpos, setPrevScrollpos] = useState<number>(window.pageYOffset)\n  const [, setLoading] = useState<boolean>(false)\n\n  const { search } = useLocation();\n  useEffect(() => {\n    const characterToLoad = qs.parse(search, { ignoreQueryPrefix: true }).character\n    if (characterToLoad) {\n      setLoading(true)\n      axios\n        .get('characters/' + characterToLoad + '.json')\n        .then((response: any) => {\n          setLoading(false)\n          try {\n            if (!Array.isArray(response.data) && typeof response.data === 'object') {\n              console.log('Loaded Character - ' + characterToLoad)\n              updateCharacter(response.data)\n            } else {\n              throw new Error('El archivo no contiene un personaje de DnD.')\n            }\n          }\n          catch {\n            throw new Error('El archivo no contiene un personaje de DnD.')\n          }\n        })\n        .catch((error: any) => {\n          console.log('Failed to load Character - ' + characterToLoad)\n          console.log(error)\n          setLoading(false)\n        })\n    }\n  }, [search]);\n\n  const statsSheet = (\n    <DnDCharacterStatsSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const profileSheet = (\n    <DnDCharacterProfileSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const spellSheet = (\n    <DnDCharacterSpellSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n\n  window.onscroll = function() {onScroll()};\n  function onScroll() {\n    var currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos || currentScrollPos < 20) {\n      setNavTop(0)\n    } else {\n      setNavTop(-280);\n    }\n    setPrevScrollpos(currentScrollPos)\n  }\n\n  function loadDefaultCharacter () {\n    let character: DnDCharacter = {}\n    const lsData = localStorage.getItem('dnd-character-data')\n    if (lsData) {\n      try {\n        character = JSON.parse(lsData)\n      } catch {}\n    }\n    return character\n  }\n\n  function updateCharacter (character: DnDCharacter) {\n    setCharacter(character)\n    localStorage.setItem('dnd-character-data', JSON.stringify(character))\n  }\n\n  function exportCharacter () {\n    const json = JSON.stringify(character, null, 2)\n\n    var a = document.createElement('a');\n    var file = new Blob([json], {type: 'application/json'});\n    a.href = URL.createObjectURL(file);\n    a.download = character.name ? character.name.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.json' : 'dnd-personaje.json';\n    a.click();\n  }\n\n\n  function importCharacter (event: any) {\n    if (event.target.files.length > 0){\n      var fr = new FileReader();\n\n      fr.onload = function(e) { \n        if (e.target && e.target.result && typeof e.target.result === 'string') {\n          loadCharacter(e.target.result)\n        }\n      }\n    \n      fr.readAsText(event.target.files[0]);\n      event.target.value = '';\n    }\n  }\n\n  function loadCharacter(json: string) {\n    try {\n      var result = JSON.parse(typeof json === 'string' ? json : '{}');\n      if (!Array.isArray(result) && typeof result === 'object') {\n        updateCharacter(result)\n      } else {\n        window.alert('El archivo no contiene un personaje de DnD.')\n      }\n    }\n    catch {\n      window.alert('El archivo no contiene un personaje de DnD.')\n    }\n  }\n\n  function clearCharacter() {\n    if (window.confirm(\"¿Estás seguro?\")) {\n      updateCharacter({ })\n    }\n  }\n\n  function getDefaultRedirect(search: string | undefined) {\n    let defaultRedirect = '/status' + search\n    if (window.innerWidth < 992) { \n      // is mobile device\n      defaultRedirect = '/todo' + search\n    }\n    return defaultRedirect\n  }\n\n  return (\n    <div>\n      <nav className='navbar navbar-expand-lg navbar-dark fixed-top' style={{ backgroundColor: 'rgb(204, 10, 33)', top: navTop === 0 ? '' : navTop + 'px' }}>\n          <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\n              <span className='navbar-toggler-icon'></span>\n          </button>\n          <div style={{width:'100%'}}>\n            <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n                <ul className='navbar-nav ml-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/status' ? 'nav-link active' : 'nav-link'} to='/status'>Status</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/perfil' ? 'nav-link active' : 'nav-link'} to='/perfil'>Perfil</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/conjuros' ? 'nav-link active' : 'nav-link'} to='/conjuros'>Conjuros</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/todo' ? 'nav-link active' : 'nav-link'} to='/todo'>Todo</Link>\n                    </li>\n                </ul>\n\n                <ul className='navbar-nav ml-auto mr-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <button className='btn btn-dark' onClick={() => exportCharacter()}>Exportar</button>\n                        <input style={{display: 'none'}} type=\"file\" id=\"selectFiles\" accept=\"application/json\" onChange={(e) => importCharacter(e)} />\n                        <button className='btn btn-dark' onClick={() => document.getElementById(\"selectFiles\")?.click()}>Importar</button>\n                        <button className='btn btn-dark' onClick={() => window.print()}>Imprimir</button>\n                        <button className='btn btn-danger' onClick={() => clearCharacter()}>Borrar</button>\n                    </li>\n                </ul>\n            </div>\n          </div>\n      </nav>\n      <div className='app-holder'>\n\n        <Switch>\n          <Route exact path='/'>\n            <ScrollToTop />\n            <Redirect to={getDefaultRedirect(search)} />\n          </Route>\n          <Route exact path='/status'>\n            <ScrollToTop />\n            {statsSheet}\n          </Route>\n          <Route exact path='/perfil'>\n            <ScrollToTop />\n            {profileSheet}\n          </Route>\n          <Route exact path='/conjuros'>\n            <ScrollToTop />\n            {spellSheet}\n          </Route>\n          <Route exact path='/todo'>\n            <ScrollToTop />\n            {statsSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {profileSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {spellSheet}\n          </Route>\n        </Switch>\n        \n\n      </div>\n      <footer className=\"no-print page-footer font-small text-white pt-4\" style={{ backgroundColor: 'rgb(211, 49, 21)' }}>\n        <div className=\"container-fluid container-xl text-center text-md-left mt-2 mb-3\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-md-0 mt-3\">\n                <h5>DnD Hojas de Personaje</h5>\n                <p>Esta página fue creada usando dnd-hojas-de-pesonaje, una traducción de dnd-character-sheets, una librería de ReactJs de código abierto creada por Daryl Buckle.</p>\n              </div>\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Links</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://github.com/darylbuckle/dnd-character-sheets\">Código Fuente Original</a>\n                  </li>\n                  <li>\n                    <a href=\"https://github.com/jaquer/dnd-hojas-de-personaje\">Código Fuente Traducido</a>\n                  </li>\n                  <li>\n                    <a href=\"https://www.npmjs.com/package/dnd-character-sheets\">Npm</a>\n                  </li>\n                  <li>\n                    <a href=\"https://github.com/darylbuckle\">Daryl Buckle</a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Relacionado</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://darylbuckle.github.io/espergen-character-sheets\">Hojas de Personaje Esper Genesis (en Inglés)</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div className=\"footer-copyright text-center mt-5 py-2 text-white small\" style={{ backgroundColor: 'rgb(204, 10, 33)' }}>\n          MIT © Daryl Buckle 2020\n        </div>\n      </footer>\n    </div>\n    \n  )\n}\n\nexport default withRouter(App)\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router basename={'dnd-hojas-de-personaje'}><App /></Router>, document.getElementById('root'))\n"],"sourceRoot":""}